name: Daily build
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - self-hosted
        package:
          - vim-mainline
          - neovim-mainline
          - tree-sitter-mainline
    steps:
      - uses: actions/checkout@v4

      - name: Set up GitHub CLI
        if: ${{ matrix.platform == 'self-hosted' }}
        run: |
          curl -sS https://webi.sh/gh | sh
          source ~/.config/envman/PATH.env

      - name: Check eligibility
        env:
          GH_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        run: |
          _ARCH=$(uname -m)
          echo "_ARCH=$_ARCH" >> $GITHUB_ENV
          _PACKAGE=${{ matrix.package }}
          _REPO_URL=$(cat $_PACKAGE/.SRCINFO | grep source | awk '{print $3}' | head -n 1 | sed 's/git+//')
          _PACKAGE=${_PACKAGE^^}
          _PREVIOUS_COMMIT=$(gh variable get ${_PACKAGE//-/_}_COMMIT_ID_${_ARCH^^})
          echo "_PREVIOUS_COMMIT=$_PREVIOUS_COMMIT" >> $GITHUB_ENV
          git clone $_REPO_URL repo
          _COMMIT=$(git -C repo rev-parse HEAD)
          echo "_COMMIT=$_COMMIT" >> $GITHUB_ENV
          rm -rf repo
          echo "Previous commit id: $_PREVIOUS_COMMIT"
          echo "Current commit id: $_COMMIT"

      - name: Set up Docker Buildx
        if: ${{ env._COMMIT != env._PREVIOUS_COMMIT }}
        uses: docker/setup-buildx-action@v3

      - name: Build
        if: ${{ env._COMMIT != env._PREVIOUS_COMMIT }}
        run: |
          cd ${{ matrix.package }}
          cp ../Dockerfile .
          docker build -t dist .

      - name: Export
        if: ${{ env._COMMIT != env._PREVIOUS_COMMIT }}
        run: |
          docker run -v "./dist:/opt/builder/dist" --user root --rm dist sh -c "cp *.pkg.* dist"
          _DIR=${{ matrix.package }}-$_ARCH
          mkdir $_DIR
          cp dist/*.pkg.* $_DIR
          zip -r dist.zip $_DIR

      - name: Upload artifact
        if: ${{ env._COMMIT != env._PREVIOUS_COMMIT }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ env._ARCH }}
          path: dist.zip

      - name: Update current commit
        if: ${{ env._COMMIT != env._PREVIOUS_COMMIT }}
        env:
          GH_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        run: |
          _PACKAGE=${{ matrix.package }}
          _PACKAGE=${_PACKAGE^^}
          gh variable set ${_PACKAGE//-/_}_COMMIT_ID_${_ARCH^^} --body $_COMMIT

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64
    steps:
      - name: Prepare artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*-${{ matrix.arch }}"

      - name: Check eligibility
        run: echo "_PACKAGES_COUNT=$(ls | wc -l)" >> $GITHUB_ENV

      - name: Upload packages
        if: ${{ env._PACKAGES_COUNT > 0 }}
        env:
          _TOKEN: ${{ secrets._TOKEN }}
        run: |
          find . -type f -name "*.zip" -exec unzip {} \;
          mkdir dist
          cp */*.pkg.* dist
          cd dist
          ls -l
          tar -cf ../build.tar.gz *.pkg.*
          cd ..
          curl -H "X-Token:$_TOKEN" -H "X-Repo:pkgbuilds" -H "X-Param:${{ matrix.arch }}" -F build=@build.tar.gz https://api.gomasy.jp/v1/github/push
