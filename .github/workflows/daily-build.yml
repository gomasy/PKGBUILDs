name: Daily build
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: vim-mainline
            repo: https://github.com/vim/vim.git
            commit: ${{ vars.VIM_MAINLINE_COMMIT_ID }}
          - package: neovim-mainline
            repo: https://github.com/neovim/neovim.git
            commit: ${{ vars.NEOVIM_MAINLINE_COMMIT_ID }}
          - package: tree-sitter-mainline
            repo: https://github.com/tree-sitter/tree-sitter.git
            commit: ${{ vars.TREE_SITTER_MAINLINE_COMMIT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Check eligibility
        run: |
          git clone ${{ matrix.repo }} repo
          _COMMIT=$(git -C repo rev-parse HEAD)
          echo "_COMMIT=$_COMMIT" >> $GITHUB_ENV
          rm -rf repo
          echo "Previous commit id: ${{ matrix.commit }}"
          echo "Current commit id: $_COMMIT"

      - name: Set up Docker Buildx
        if: ${{ env._COMMIT != matrix.commit }}
        uses: docker/setup-buildx-action@v3

      - name: Build
        if: ${{ env._COMMIT != matrix.commit }}
        run: |
          cd ${{ matrix.package }}
          cp ../Dockerfile .
          docker build -t dist .

      - name: Export
        if: ${{ env._COMMIT != matrix.commit }}
        run: docker run -v "./dist:/opt/builder/dist" --user root --rm dist sh -c "cp *.pkg.tar.zst dist"

      - name: Upload artifact
        if: ${{ env._COMMIT != matrix.commit }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}
          path: ./dist/*.pkg.tar.zst

      - name: Update current commit
        if: ${{ env._COMMIT != matrix.commit }}
        env:
          GH_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        run: |
          _PACKAGE=${{ matrix.package }}
          _PACKAGE=${_PACKAGE^^}
          gh variable set ${_PACKAGE//-/_}_COMMIT_ID --body $_COMMIT

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Prepare artifact
        uses: actions/download-artifact@v4

      - name: Check eligibility
        run: echo "_PACKAGES_COUNT=$(ls | wc -l)" >> $GITHUB_ENV

      - name: Upload packages
        if: ${{ env._PACKAGES_COUNT > 0 }}
        env:
          _TOKEN: ${{ secrets._TOKEN }}
        run: |
          mkdir dist
          cp */*.pkg.tar.zst dist
          cd dist
          ls -l
          tar -cf ../build.tar.gz *.tar.zst
          cd ..
          curl -H "X-Token:$_TOKEN" -H "X-Repo:pkgbuilds" -F build=@build.tar.gz https://gomasy.jp/api/v1/github/push
