# Maintainer: Gomasy <nyan@gomasy.jp>

pkgbase='neovim'
pkgname="$pkgbase-mainline"
pkgver=0.11.0
pkgrel=1
pkgdesc='Fork of Vim aiming to improve user experience, plugins, and GUIs'
arch=('x86_64')
url='https://neovim.io'
backup=('etc/xdg/nvim/sysinit.vim')
license=('Apache-2.0' 'LicenseRef-vim')
provides=("neovim=${pkgver}" 'vim-plugin-runtime')
conflicts=('neovim')
depends=('libluv' 'libutf8proc' 'libuv' 'libvterm>=0.3.3' 'lua51-lpeg' 'luajit' 'msgpack-c' 'tree-sitter' 'tree-sitter-c'
         'tree-sitter-lua' 'tree-sitter-markdown' 'tree-sitter-query' 'tree-sitter-vimdoc' 'unibilium')
makedepends=('cmake' 'git' 'ninja' 'unzip')
optdepends=('python-neovim: for Python 3 plugin support (see :help python)'
            'xclip: for clipboard support on X11 (or xsel) (see :help clipboard)'
            'xsel: for clipboard support on X11 (or xclip) (see :help clipboard)'
            'wl-clipboard: for clipboard support on wayland (see :help clipboard)')
source=('git+https://github.com/neovim/neovim.git'
        nvimdoc{,.hook})
sha512sums=('SKIP'
            '22662462c823de243599cdd3483e46ade4ab59b219e907468d34c18e584fe7477548e357ee2ce56bb098cf54b770b108a3511703dd486f0774a65c84af78f6aa'
            '3c6ee1e4646d09c164a2212f9e4d2f53158ff32911b0972e060a395a8d4685334574a7ede995a81680dcc0750cd3327a78beb7904a4bb326b2399d79a8b12d5e')
b2sums=('SKIP'
        'd31cf81659e238fada8092755eb9be16f77c00a466107eb5770c6c9c32e043c91e6efada7ddb51663716a0e38ffa6e3d0093b3e6833aa961d845c7451a95491e'
        '26588b9da6459393076723bdfb8d2b16fed882070f2326bf7c35cd272dee9c18df603afb1ae2254cd0a59eff68189caf04828ef165d5de42c7a4222267604101')

pkgver() {
    cd "$pkgbase"

    _major=$(cat CMakeLists.txt | awk '/NVIM_VERSION_MAJOR/{print substr($2, 0, index($2, ")") - 1)}')
    _minor=$(cat CMakeLists.txt | awk '/NVIM_VERSION_MINOR/{print substr($2, 0, index($2, ")") - 1)}')
    _patch=$(cat CMakeLists.txt | awk '/NVIM_VERSION_PATCH/{print substr($2, 0, index($2, ")") - 1)}')

    echo $_major.$_minor.$_patch.$(git describe --long | sed -r 's/^[^-]*-(.*)$/r\1/;s/^v//;s/-/./g')
}

build() {
    cd "$pkgbase"

    cmake \
        -B build \
        -G Ninja \
        -D CMAKE_BUILD_TYPE=Release \
        -D CMAKE_INSTALL_PREFIX=/usr \
        -D USE_BUNDLED=OFF \
        -W no-dev

    cmake --build build --verbose
}

check() {
    cd "$pkgbase/build"

    ./bin/nvim --version
    ./bin/nvim --headless -u NONE -i NONE +q
}

package() {
    install -Dm644 -t "$pkgdir/usr/share/libalpm/hooks/" nvimdoc.hook
    install -Dt "$pkgdir/usr/share/libalpm/scripts/" nvimdoc

    cd "$pkgbase"
    DESTDIR="$pkgdir" cmake --install build

    install -Dm644 LICENSE.txt -t "$pkgdir/usr/share/licenses/$pkgname/"
    install -Dm644 runtime/nvim.desktop -t "$pkgdir/usr/share/applications/"
    install -Dm644 runtime/nvim.appdata.xml -t "$pkgdir/usr/share/metainfo/"
    install -Dm644 runtime/nvim.png -t "$pkgdir/usr/share/pixmaps/"

    # Tree-sitter grammars are packaged separately and installed into
    # /usr/lib/tree_sitter.
    ln -s /usr/lib/tree_sitter "$pkgdir/usr/share/nvim/runtime/parser"

    # Include system-wide Vim directory in runtimepath
    mkdir -p "$pkgdir/etc/xdg/nvim"
    echo "source /usr/share/nvim/archlinux.lua" > "$pkgdir/etc/xdg/nvim/sysinit.vim"

    mkdir -p "$pkgdir/usr/share/vim"
    cat > "$pkgdir/usr/share/nvim/archlinux.lua" << EOF
-- Modify runtimepath to also search the system-wide Vim directory
-- (eg. for Vim runtime files from Arch Linux packages)
vim.opt.runtimepath:append({ '/usr/share/vim/vimfiles', '/usr/share/vim/vimfiles/after' })
EOF
}
